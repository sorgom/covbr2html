k:/git/covbr2html/code/Covbr2Html.cpp:
  ...
        12 using std::string;
        13 using fpath = std::filesystem::path;
        14
-->     15 bool Covbr2Html::convert(const string& covbrTxt, const std::string& odir, const bool wb, const bool hc)
        16 {
        17     #define C_BEGIN "(?:^|(\\n))"
        18     #define C_ECLIP "(?: +\\.\\.\\.\\n)?"
  ...
        66
        67     string buff;
        68     const bool ok = read(buff, covbrTxt);
-->     69     if (
  -->              ok and
  -->                     regex_search(buff, reFile))
        70     {
        71         const bool fWb = not odir.empty();
-->     72         const auto opath = fWb ? fpath(odir) : fpath(covbrTxt).parent_path();
        73         const auto fname = fpath(covbrTxt).filename().string();
        74         std::ofstream os;
        75
  ...
        79             rep = repl(reTail, "", repl(reSpc, "\n$1", repl(reDup, "\n$1$2", buff)));
        80         }
        81         //  if anything left
-->     82         if (regex_search(rep, reFile))
        83         {
        84             //  write text file if changed or output directory specified
-->     85             if (
  -->                      wb and (
  -->                              fWb or
  -->                                     rep != buff))
        86             {
        87                 TRACE_FLOW_TIME(re-write source)
-->     88                 if (open(os, opath / fname))
        89                 {
        90                     os << rep;
        91                     os.close();
        92                 }
        93             }
        94             {
        95                 TRACE_FLOW_TIME(convert to html)
-->     96                 rep =   repl(re_tf, hc ? rep_tf_hc : rep_tf,
-->     97                         repl(re_X,  hc ? rep_X_hc  : rep_X,
        98                         repl(re_x,  rep_x,
        99                         repl(re_t,  rep_t,
       100                         repl(re_f,  rep_f,
  ...
       108             {
       109                 TRACE_FLOW_TIME(write html)
       110                 const string ttl = repl(reExt, "", fname);
-->    111                 if (open(os, opath / repl(reExt, ".html", fname)))
       112                 {
       113                     os << cTtl << ttl << cHead << rep << cTail;
       114                     os.close();
  ...
k:/git/covbr2html/code/CovbrGlobber.cpp:
  ...
        4 #include <iostream>
        5 #include <filesystem>
        6
-->     7 void CovbrGlobber::process(const CONST_C_STRING item)
        8 {
-->     9     if (mOk) mThreads.push_back(std::thread(&CovbrGlobber::threadFunc, this, std::string(item)));
       10 }
       11
-->    12 bool CovbrGlobber::setOdir(const CONST_C_STRING odir)
       13 {
       14     mOk = true;
       15     mOdir.clear();
       16     try
       17     {
       18         std::filesystem::create_directories(odir);
       19         mOdir = odir;
-->    20     }
       21     catch(const std::filesystem::filesystem_error&)
-->    22     {
       23         mOk = false;
       24         mRet = 1;
       25         std::cerr << "cannot create directory " << odir << '\n';
  ...
X      30 INT32 CovbrGlobber::ret()
       31 {
       32     join();
-->F   33     if (mRet != 0) std::cerr << mRet << " errors\n";
       34     return mRet;
       35 }
       36
-->    37 void CovbrGlobber::threadFunc(const std::string&& file)
       38 {
       39     TRACE_FUNC_TIME()
-->    40     if (not Covbr2Html::convert(file, mOdir, mWb, mHc)) ++mRet;
       41 }
       42
X      43 void CovbrGlobber::join()
       44 {
       45     TRACE_FUNC_TIME()
-->    46     for (auto& th : mThreads) th.join();
       47     mThreads.clear();
       48 }
k:/git/covbr2html/code/CovbrGlobber.h:
k:/git/covbr2html/code/main.cpp:
  ...
       29     TRACE_FUNC_TIME()
       30     auto ret = 1;
       31     DocOpts opts;
-->T   32     if (opts.process(cOpts, argc, argv))
       33     {
       34         ret = 0;
TF     35         if (opts.isSet('h'))
  ...
       42             globber.setWb(opts.isSet('w'));
       43             globber.setHc(opts.isSet('c'));
       44             CONST_C_STRING odir = nullptr;
-->T   45             if (
  -->t                    (not opts.getValue(odir, 'o')) or
  -->                                                       globber.setOdir(odir))
       46             {
TF     47                 for (auto i = 0; i < opts.argc(); ++i)
       48                 {
  ...
